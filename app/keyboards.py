from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

import app.time_calc as tc

skip_name = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–≤–æ–¥ –∏–º–µ–Ω–∏ ‚è©', callback_data='skip_name')]
])

delete_name = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –∏–º—è ‚ùå', callback_data='delete_name')]
])

async def date_choise():
    keyboard = InlineKeyboardBuilder()
    dates = tc.get_date_options()
    for date in dates:
        keyboard.add(InlineKeyboardButton(text=date, callback_data=date))
    return keyboard.adjust(1).as_markup()

async def time_choise(time: str):
    keyboard = InlineKeyboardBuilder()
    for i in range(24):
        if i < 10:
            keyboard.add(InlineKeyboardButton(text=f'0{i}:{time}', callback_data=f'0{i}:{time}'))
        else:
            keyboard.add(InlineKeyboardButton(text=f'{i}:{time}', callback_data=f'{i}:{time}'))
    return keyboard.adjust(4).as_markup()

is_datetime_correct = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–í—Å–µ –≤–µ—Ä–Ω–æ‚úÖ', callback_data='dt_is_correct')],
    [InlineKeyboardButton(text='–ù–µ—Ç, —É–∫–∞–∑–∞—Ç—å –∑–∞–Ω–æ–≤–æ‚ùå', callback_data='dt_is_incorrect')]
])

async def notifications_hours():
    keyboard = InlineKeyboardBuilder()
    for i in range(24):
        if i < 10:
            keyboard.add(InlineKeyboardButton(text=f'0{i}:00', callback_data=f'0{i}:00'))
        else:
            keyboard.add(InlineKeyboardButton(text=f'{i}:00', callback_data=f'{i}:00'))
    return keyboard.adjust(4).as_markup()

async def notifications_mins(hours: str):
    keyboard = InlineKeyboardBuilder()
    for i in range(0, 56, 5):
        if i < 10:
            keyboard.add(InlineKeyboardButton(text=f'{hours}:0{i}', callback_data=f'{hours}:0{i}'))
        else:
            keyboard.add(InlineKeyboardButton(text=f'{hours}:{i}', callback_data=f'{hours}:{i}'))
    return keyboard.adjust(4).as_markup()

choose_setting = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ò–º—è üë§', callback_data='set_name')],
    [InlineKeyboardButton(text='–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å üåè', callback_data='set_timezone')],
    [InlineKeyboardButton(text='–î–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è üë∂üèª', callback_data='set_birthday')],
    [InlineKeyboardButton(text='–í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π ‚úâÔ∏è', callback_data='set_notifs_time')],
    [InlineKeyboardButton(text='–ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É üí≥', callback_data='subscription')],
    [InlineKeyboardButton(text='–ó–∞–∫—Ä—ã—Ç—å ‚ùå', callback_data='close_profile')]
])

prolong_subscr_btns = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ü—Ä–æ–¥–ª–∏—Ç—å –Ω–∞ 30 –¥–Ω–µ–π, 99 RUB', callback_data='prolong_1_month')],
    [InlineKeyboardButton(text='–ü—Ä–æ–¥–ª–∏—Ç—å –Ω–∞ 60 –¥–Ω–µ–π, 180 RUB', callback_data='prolong_2_month')],
    [InlineKeyboardButton(text='–ü—Ä–æ–¥–ª–∏—Ç—å –Ω–∞ 90 –¥–Ω–µ–π, 250 RUB', callback_data='prolong_3_month')],
    [InlineKeyboardButton(text='–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ', callback_data='about_subscription')],
    # [InlineKeyboardButton(text='–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É, 80 RUB/–º–µ—Å—è—Ü', callback_data='prolong_monthly')]
    [InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚ùå', callback_data='delete_this_message')]
])

async def payment_kb(payment_url, payment_id, amount):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f'–û–ø–ª–∞—Ç–∏—Ç—å {amount} RUB üí≥', url=payment_url)],
        [InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É üîé', callback_data=f'check_payment_{payment_id}')]
    ])
    return keyboard

delete_this_message = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚ùå', callback_data='delete_this_message')]
])

subscription_expires = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ü—Ä–æ–¥–ª–∏—Ç—å üí≥', callback_data='subscription')],
    [InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚ùå', callback_data='delete_this_message')]
])

disable_bot = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–î–∞, –æ—Ç–∫–ª—é—á–∏—Ç—å ‚ùå', callback_data='disable_bot')],
    [InlineKeyboardButton(text='–ù–µ—Ç, –æ—Å—Ç–∞–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º ‚úÖ', callback_data='keep_bot_active')]
])

is_meiling_text_correct = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É', callback_data='correct_mailing')],
    [InlineKeyboardButton(text='–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ', callback_data='incorrect_mailing')],
    [InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel_mailing')]
])